{"version":3,"sources":["GoodsList.tsx","api/goods.ts","App.tsx","index.tsx"],"names":["GoodsList","goods","map","good","style","color","name","id","getAll","fetch","then","response","ok","Error","json","App","useState","preparedGoods","setPreparedGoods","className","type","onClick","sort","a","b","localeCompare","splice","filter","ReactDOM","render","document","getElementById"],"mappings":"iMAOaA,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBAEE,UAAQ,OACRC,MAAO,CAAEC,MAAOF,EAAKE,OAHvB,SAKGF,EAAKG,MAJDH,EAAKI,UCNX,SAASC,IACd,OAAOC,MAHI,yEAIRC,MAAK,SAAAC,GACJ,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAM,2CAGlB,OAAOF,EAASG,UAIf,ICXMC,EAAgB,WAC3B,MAA0CC,mBAAiB,IAA3D,mBAAOC,EAAP,KAAsBC,EAAtB,KAEA,OACE,sBAAKC,UAAU,MAAf,UACE,uDAEA,wBACEC,KAAK,SACL,UAAQ,aACRC,QAAS,kBAAMb,IAASE,KAAKQ,IAH/B,4BAQA,wBACEE,KAAK,SACL,UAAQ,oBACRC,QAAS,kBDNRb,IACJE,MAAK,SAACC,GAIL,OAHoBA,EAASW,MAAK,SAACC,EAASC,GAAV,OAChCD,EAAEjB,KAAKmB,cAAcD,EAAElB,SAENoB,OAAO,EAAG,MCCAhB,KAAKQ,IAHlC,gCAQA,wBACEE,KAAK,SACL,UAAQ,aACRC,QAAS,kBDJRb,IACJE,MAAK,SAAAC,GAAQ,OAAIA,EAASgB,QAAO,SAAAxB,GAAI,MAAmB,QAAfA,EAAKE,YCGdK,KAAKQ,IAHpC,4BAQA,cAAC,EAAD,CAAWjB,MAAOgB,QCjCxBW,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ffe1a777.chunk.js","sourcesContent":["import React from 'react';\nimport { Good } from './types/Good';\n\ntype Props = {\n  goods: Good[]\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li\n        key={good.id}\n        data-cy=\"good\"\n        style={{ color: good.color }}\n      >\n        {good.name}\n      </li>\n    ))}\n  </ul>\n);\n","import { Good } from '../types/Good';\n\n// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport function getAll(): Promise<Good[]> {\n  return fetch(API_URL)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error('Not your day... Please try again later.');\n      }\n\n      return response.json();\n    });\n}\n\nexport const get5First = (): Promise<Good[]> => {\n  return getAll()\n    .then((response) => {\n      const sortedGoods = response.sort((a: Good, b: Good) => (\n        a.name.localeCompare(b.name)));\n\n      return sortedGoods.splice(0, 5);\n    });\n};\n\nexport const getRedGoods = (): Promise<Good[]> => {\n  return getAll()\n    .then(response => response.filter(good => good.color === 'red'));\n};\n","import React, { useState } from 'react';\nimport { GoodsList } from './GoodsList';\nimport { Good } from './types/Good';\nimport { getAll, get5First, getRedGoods } from './api/goods';\n\nexport const App: React.FC = () => {\n  const [preparedGoods, setPreparedGoods] = useState<Good[]>([]);\n\n  return (\n    <div className=\"App\">\n      <h1>Dynamic list of Goods</h1>\n\n      <button\n        type=\"button\"\n        data-cy=\"all-button\"\n        onClick={() => getAll().then(setPreparedGoods)}\n      >\n        Load all goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"first-five-button\"\n        onClick={() => get5First().then(setPreparedGoods)}\n      >\n        Load 5 first goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"red-button\"\n        onClick={() => getRedGoods().then(setPreparedGoods)}\n      >\n        Load red goods\n      </button>\n\n      <GoodsList goods={preparedGoods} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}